// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Online_Food_Ordering.Data;

#nullable disable

namespace Online_Food_Ordering.Migrations
{
    [DbContext(typeof(Online_Food_OrderingContext))]
    [Migration("20250425061237_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineFoodOrdering.Models.CustomerProfile", b =>
                {
                    b.Property<int>("CustomerProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerProfileId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CustomerProfileId");

                    b.ToTable("CustomerProfile");
                });

            modelBuilder.Entity("OnlineFoodOrdering.Models.DeliveryInfo", b =>
                {
                    b.Property<int>("DeliveryInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryInfoId"));

                    b.Property<string>("DeliveryAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EstimatedTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DeliveryInfoId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("DeliveryInfo");
                });

            modelBuilder.Entity("OnlineFoodOrdering.Models.MenuItem", b =>
                {
                    b.Property<int>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuItemId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RestaurantInfoId")
                        .HasColumnType("int");

                    b.HasKey("MenuItemId");

                    b.HasIndex("RestaurantInfoId");

                    b.ToTable("MenuItem");
                });

            modelBuilder.Entity("OnlineFoodOrdering.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("CustomerProfileId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantInfoId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerProfileId");

                    b.HasIndex("RestaurantInfoId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("OnlineFoodOrdering.Models.RestaurantInfo", b =>
                {
                    b.Property<int>("RestaurantInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestaurantInfoId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CuisineType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RestaurantInfoId");

                    b.ToTable("RestaurantInfo");
                });

            modelBuilder.Entity("OnlineFoodOrdering.Models.DeliveryInfo", b =>
                {
                    b.HasOne("OnlineFoodOrdering.Models.Order", "Order")
                        .WithOne("DeliveryInfo")
                        .HasForeignKey("OnlineFoodOrdering.Models.DeliveryInfo", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OnlineFoodOrdering.Models.MenuItem", b =>
                {
                    b.HasOne("OnlineFoodOrdering.Models.RestaurantInfo", "RestaurantInfo")
                        .WithMany("MenuItems")
                        .HasForeignKey("RestaurantInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RestaurantInfo");
                });

            modelBuilder.Entity("OnlineFoodOrdering.Models.Order", b =>
                {
                    b.HasOne("OnlineFoodOrdering.Models.CustomerProfile", "CustomerProfile")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineFoodOrdering.Models.RestaurantInfo", "RestaurantInfo")
                        .WithMany("Orders")
                        .HasForeignKey("RestaurantInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerProfile");

                    b.Navigation("RestaurantInfo");
                });

            modelBuilder.Entity("OnlineFoodOrdering.Models.CustomerProfile", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OnlineFoodOrdering.Models.Order", b =>
                {
                    b.Navigation("DeliveryInfo");
                });

            modelBuilder.Entity("OnlineFoodOrdering.Models.RestaurantInfo", b =>
                {
                    b.Navigation("MenuItems");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
